
pipeline WorldBankPipeline {

    // Defining a pipeline with three pipes
    WorldBankExtractor
    -> WorldBankXLSXInterpreter
    -> WorldBankSheetPicker
    -> RangeSelector;

    // Second pipe for the first table
    RangeSelector
    -> BondIssuanceTableInterpreter
    -> BondIssuanceLoader;

    // third pipe for the second table
    RangeSelector
    -> gdpPerCapitaTableInterpreter
    -> gdpPerCapitaLoader;


    // Define the data source as an Excel file from the given URL
    block WorldBankExtractor oftype HttpExtractor {
        url: "https://thedocs.worldbank.org/en/doc/7d852628d96b9411d43e5d36d5dff941-0050062022/original/Graphs-Chapter-5-02082022.xlsx";
    }
    // Load the Excel data
    block  WorldBankXLSXInterpreter oftype XLSXInterpreter {}

    block WorldBankSheetPicker oftype SheetPicker {
    sheetName: 'Figure S5.1.2';
    }

    block RangeSelector oftype CellRangeSelector {
        select: range P2:S45;
    }

    // Setting up the first table
    block BondIssuanceTableInterpreter oftype TableInterpreter {
        header: false;
        columns: [
            "Country Code" oftype CountryCodeAlpha3,
            "Bond Issuance Share" oftype bondShare_range
        ];
    }

    // loading first table to SQLite
    block BondIssuanceLoader oftype SQLiteLoader {
        table: "bondIssuance";
        file: "./country-stats.sqlite";
    }

    // Implementing Logic for the second table
    block gdpPerCapitaTableInterpreter oftype TableInterpreter {
        header: false;
        columns: [
            "Country Code" oftype CountryCodeAlpha3,
            "GDP per Capita" oftype PositiveDecimal_GDP,
        ];
    }

    // loading second table to SQLite
    block gdpPerCapitaLoader oftype SQLiteLoader {
        table: "gdpPerCapita";
        file: "./country-stats.sqlite";
    }


}

// Define constraints and validation
constraint PositiveDecimal oftype RangeConstraint {
   lowerBound: 0;
   lowerBoundInclusive: false;
}

constraint BondShareRange oftype RangeConstraint {
    lowerBound: 0; 
    upperBound: 1;
}

valuetype PositiveDecimal_GDP oftype decimal {
    constraints: [PositiveDecimal];
}

valuetype bondShare_range oftype decimal {
    constraints: [BondShareRange];
}
